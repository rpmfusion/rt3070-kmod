diff -rupN 2009_0520_RT3070_Linux_STA_v2.1.1.0.old/os/linux/rt_linux.c 2009_0520_RT3070_Linux_STA_v2.1.1.0/os/linux/rt_linux.c
--- 2009_0520_RT3070_Linux_STA_v2.1.1.0.old/os/linux/rt_linux.c	2009-05-20 22:00:29.000000000 -0400
+++ 2009_0520_RT3070_Linux_STA_v2.1.1.0/os/linux/rt_linux.c	2009-05-22 23:54:59.000000000 -0400
@@ -1267,7 +1267,11 @@ struct net_device *alloc_netdev(
     memset(dev, 0, alloc_size);
 
     if (sizeof_priv)
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
         dev->priv = (void *) (((long)(dev + 1) + 31) & ~31);
+#else
+        dev->ml_priv = (void *) (((long)(dev + 1) + 31) & ~31);
+#endif
 
     setup(dev);
     strcpy(dev->name, mask);
diff -rupN 2009_0520_RT3070_Linux_STA_v2.1.1.0.old/os/linux/sta_ioctl.c 2009_0520_RT3070_Linux_STA_v2.1.1.0/os/linux/sta_ioctl.c
--- 2009_0520_RT3070_Linux_STA_v2.1.1.0.old/os/linux/sta_ioctl.c	2009-05-20 22:00:29.000000000 -0400
+++ 2009_0520_RT3070_Linux_STA_v2.1.1.0/os/linux/sta_ioctl.c	2009-05-23 00:06:52.000000000 -0400
@@ -647,7 +647,11 @@ int rt_ioctl_siwfreq(struct net_device *
 			struct iw_request_info *info,
 			struct iw_freq *freq, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	int 	chan = -1;
 
     //check if the interface is down
@@ -686,7 +690,11 @@ int rt_ioctl_giwfreq(struct net_device *
 	UCHAR ch;
 	ULONG	m = 2412000;
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	pAdapter = dev->priv;
+#else
+	pAdapter = dev->ml_priv;
+#endif
 	if (pAdapter == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
@@ -709,7 +717,11 @@ int rt_ioctl_siwmode(struct net_device *
 		   struct iw_request_info *info,
 		   __u32 *mode, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	//check if the interface is down
     if(!RTMP_TEST_FLAG(pAdapter, fRTMP_ADAPTER_INTERRUPT_IN_USE))
@@ -747,7 +759,11 @@ int rt_ioctl_giwmode(struct net_device *
 		   struct iw_request_info *info,
 		   __u32 *mode, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	if (pAdapter == NULL)
 	{
@@ -777,7 +793,11 @@ int rt_ioctl_siwsens(struct net_device *
 		   struct iw_request_info *info,
 		   char *name, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	//check if the interface is down
     	if(!RTMP_TEST_FLAG(pAdapter, fRTMP_ADAPTER_INTERRUPT_IN_USE))
@@ -800,7 +820,11 @@ int rt_ioctl_giwrange(struct net_device 
 		   struct iw_request_info *info,
 		   struct iw_point *data, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	struct iw_range *range = (struct iw_range *) extra;
 	u16 val;
 	int i;
@@ -890,7 +914,11 @@ int rt_ioctl_siwap(struct net_device *de
 		      struct iw_request_info *info,
 		      struct sockaddr *ap_addr, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
     NDIS_802_11_MAC_ADDRESS Bssid;
 
 	//check if the interface is down
@@ -930,7 +958,11 @@ int rt_ioctl_giwap(struct net_device *de
 		      struct iw_request_info *info,
 		      struct sockaddr *ap_addr, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	if (pAdapter == NULL)
 	{
@@ -1005,7 +1037,11 @@ int rt_ioctl_iwaplist(struct net_device 
 			struct iw_request_info *info,
 			struct iw_point *data, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
  	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+ 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	struct sockaddr addr[IW_MAX_AP];
 	struct iw_quality qual[IW_MAX_AP];
@@ -1041,7 +1077,11 @@ int rt_ioctl_siwscan(struct net_device *
 			struct iw_request_info *info,
 			struct iw_point *data, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	ULONG								Now;
 	int Status = NDIS_STATUS_SUCCESS;
@@ -1123,7 +1163,11 @@ int rt_ioctl_giwscan(struct net_device *
 			struct iw_point *data, char *extra)
 {
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	int i=0;
 	PSTRING current_ev = extra, previous_ev = extra;
 	PSTRING end_buf;
@@ -1506,7 +1550,11 @@ int rt_ioctl_siwessid(struct net_device 
 			 struct iw_request_info *info,
 			 struct iw_point *data, char *essid)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	//check if the interface is down
     if(!RTMP_TEST_FLAG(pAdapter, fRTMP_ADAPTER_INTERRUPT_IN_USE))
@@ -1547,7 +1595,11 @@ int rt_ioctl_giwessid(struct net_device 
 			 struct iw_request_info *info,
 			 struct iw_point *data, char *essid)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	if (pAdapter == NULL)
 	{
@@ -1593,7 +1645,11 @@ int rt_ioctl_siwnickn(struct net_device 
 			 struct iw_request_info *info,
 			 struct iw_point *data, char *nickname)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
     //check if the interface is down
     if(!RTMP_TEST_FLAG(pAdapter, fRTMP_ADAPTER_INTERRUPT_IN_USE))
@@ -1616,7 +1672,11 @@ int rt_ioctl_giwnickn(struct net_device 
 			 struct iw_request_info *info,
 			 struct iw_point *data, char *nickname)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	if (pAdapter == NULL)
 	{
@@ -1638,7 +1698,11 @@ int rt_ioctl_siwrts(struct net_device *d
 		       struct iw_request_info *info,
 		       struct iw_param *rts, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	u16 val;
 
     //check if the interface is down
@@ -1667,7 +1731,11 @@ int rt_ioctl_giwrts(struct net_device *d
 		       struct iw_request_info *info,
 		       struct iw_param *rts, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	if (pAdapter == NULL)
 	{
@@ -1694,7 +1762,11 @@ int rt_ioctl_siwfrag(struct net_device *
 			struct iw_request_info *info,
 			struct iw_param *frag, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	u16 val;
 
 	//check if the interface is down
@@ -1721,7 +1793,11 @@ int rt_ioctl_giwfrag(struct net_device *
 			struct iw_request_info *info,
 			struct iw_param *frag, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	if (pAdapter == NULL)
 	{
@@ -1750,7 +1826,11 @@ int rt_ioctl_siwencode(struct net_device
 			  struct iw_request_info *info,
 			  struct iw_point *erq, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	//check if the interface is down
     	if(!RTMP_TEST_FLAG(pAdapter, fRTMP_ADAPTER_INTERRUPT_IN_USE))
@@ -1856,7 +1936,11 @@ rt_ioctl_giwencode(struct net_device *de
 			  struct iw_point *erq, char *key)
 {
 	int kid;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 	if (pAdapter == NULL)
 	{
@@ -1926,7 +2010,11 @@ rt_ioctl_setparam(struct net_device *dev
 	PSTRING value;
 	int  Status=0;
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	pAdapter = dev->priv;
+#else
+	pAdapter = dev->ml_priv;
+#endif
 	if (pAdapter == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
@@ -1990,7 +2078,11 @@ rt_private_get_statistics(struct net_dev
 		struct iw_point *wrq, char *extra)
 {
 	INT				Status = 0;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
     PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+#else
+    PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
     if (extra == NULL)
     {
@@ -2117,7 +2209,11 @@ rt_private_show(struct net_device *dev, 
 	POS_COOKIE		pObj;
 	u32             subcmd = wrq->flags;
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	pAd = dev->priv;
+#else
+	pAd = dev->ml_priv;
+#endif
 	if (pAd == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
@@ -2269,7 +2365,11 @@ int rt_ioctl_siwmlme(struct net_device *
 			   union iwreq_data *wrqu,
 			   char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	struct iw_mlme *pMlme = (struct iw_mlme *)wrqu->data.pointer;
 	MLME_QUEUE_ELEM				MsgElem;
 	MLME_DISASSOC_REQ_STRUCT	DisAssocReq;
@@ -2326,7 +2426,11 @@ int rt_ioctl_siwauth(struct net_device *
 			  struct iw_request_info *info,
 			  union iwreq_data *wrqu, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER   pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER   pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	struct iw_param *param = &wrqu->param;
 
     //check if the interface is down
@@ -2479,7 +2583,11 @@ int rt_ioctl_giwauth(struct net_device *
 			       struct iw_request_info *info,
 			       union iwreq_data *wrqu, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER   pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER   pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	struct iw_param *param = &wrqu->param;
 
     //check if the interface is down
@@ -2553,7 +2661,11 @@ int rt_ioctl_siwencodeext(struct net_dev
 			   union iwreq_data *wrqu,
 			   char *extra)
 			{
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
     PRTMP_ADAPTER   pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+    PRTMP_ADAPTER   pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	struct iw_point *encoding = &wrqu->encoding;
 	struct iw_encode_ext *ext = (struct iw_encode_ext *)extra;
     int keyIdx, alg = ext->alg;
@@ -2682,7 +2794,11 @@ rt_ioctl_giwencodeext(struct net_device 
 			  struct iw_request_info *info,
 			  union iwreq_data *wrqu, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER pAd = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	PCHAR pKey = NULL;
 	struct iw_point *encoding = &wrqu->encoding;
 	struct iw_encode_ext *ext = (struct iw_encode_ext *)extra;
@@ -2766,7 +2882,11 @@ int rt_ioctl_siwgenie(struct net_device 
 			  struct iw_request_info *info,
 			  union iwreq_data *wrqu, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	
 	DBGPRINT(RT_DEBUG_TRACE ,("===> rt_ioctl_siwgenie\n"));
 #ifdef NATIVE_WPA_SUPPLICANT_SUPPORT
@@ -2798,7 +2918,11 @@ int rt_ioctl_giwgenie(struct net_device 
 			       struct iw_request_info *info,
 			       union iwreq_data *wrqu, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	
 	if ((pAd->StaCfg.RSNIE_Len == 0) ||
 		(pAd->StaCfg.AuthMode < Ndis802_11AuthModeWPA))
@@ -2844,7 +2968,11 @@ int rt_ioctl_siwpmksa(struct net_device 
 			   union iwreq_data *wrqu,
 			   char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+#else
+	PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 	struct iw_pmksa *pPmksa = (struct iw_pmksa *)wrqu->data.pointer;
 	INT	CachedIdx = 0, idx = 0;
 
@@ -2928,7 +3056,11 @@ rt_private_ioctl_bbp(struct net_device *
 	UINT32				bbpValue;
 	BOOLEAN				bIsPrintAllBBP = FALSE;
 	INT					Status = 0;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
     PRTMP_ADAPTER       pAdapter = (PRTMP_ADAPTER) dev->priv;
+#else
+    PRTMP_ADAPTER       pAdapter = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
 
 
 	memset(extra, 0x00, IW_PRIV_SIZE_MASK);
@@ -3055,7 +3187,11 @@ int rt_ioctl_siwrate(struct net_device *
 			struct iw_request_info *info,
 			union iwreq_data *wrqu, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
     PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+#else
+    PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
     UINT32          rate = wrqu->bitrate.value, fixed = wrqu->bitrate.fixed;
 
     //check if the interface is down
@@ -3113,7 +3249,11 @@ int rt_ioctl_giwrate(struct net_device *
 			       struct iw_request_info *info,
 			       union iwreq_data *wrqu, char *extra)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
     PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->priv;
+#else
+    PRTMP_ADAPTER   pAd = (PRTMP_ADAPTER) dev->ml_priv;
+#endif
     int rate_index = 0, rate_count = 0;
     HTTRANSMIT_SETTING ht_setting; 
 /* Remove to global variable
@@ -5574,7 +5714,11 @@ INT rt28xx_sta_ioctl(
 	USHORT				subcmd;
 
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,29)
 	pAd = net_dev->priv;
+#else
+	pAd = net_dev->ml_priv;
+#endif
 	if (pAd == NULL)
 	{
 		/* if 1st open fail, pAd will be free;
